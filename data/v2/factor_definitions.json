{
  "side": {
    "home": {
      "expression": "true",
      "description": "Bet on home team",
      "betSide": "home"
    },
    "away": {
      "expression": "true",
      "description": "Bet on away team",
      "betSide": "away"
    },
    "higherOdds": {
      "expression": "true",
      "description": "Bet on team with higher odds",
      "betSide": "match.asianHandicapOdds.homeOdds > match.asianHandicapOdds.awayOdds ? 'home' : 'away'"
    },
    "lowerOdds": {
      "expression": "true",
      "description": "Bet on team with lower odds",
      "betSide": "match.asianHandicapOdds.homeOdds < match.asianHandicapOdds.awayOdds ? 'home' : 'away'"
    }
  },
  "size": {
    "fix": {
      "expression": "1500",
      "description": "$1500",
      "stakingMethod": "fixed"
    },
    "dynamic": {
      "expression": "200 + Math.floor((Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) - 1.91) * 100) * 150",
      "description": "$200 if odds <=1.91, else +$150 per 0.01",
      "stakingMethod": "variable"
    }
  },
  "time": {
    "earlySeason": {
      "expression": "fbref.week >= 1 && fbref.week <= 8",
      "description": "Early season weeks 1-8",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "notEarlySeason": {
      "expression": "fbref.week >= 8",
      "description": "weeks 8+",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "midSeason": {
      "expression": "fbref.week >= 9 && fbref.week <= 24",
      "description": "weeks 9-24",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "lateSeason": {
      "expression": "fbref.week >= 25",
      "description": "weeks 25+",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "firstHalf": {
      "expression": "fbref.week >= 1 && fbref.week <= 18",
      "description": "weeks 1-18",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "secondHalf": {
      "expression": "fbref.week >= 19",
      "description": "weeks 19+",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "ultraEarly": {
      "expression": "fbref.week >= 1 && fbref.week <= 4",
      "description": "weeks 1-4",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "veryEarly": {
      "expression": "fbref.week >= 1 && fbref.week <= 6",
      "description": "weeks 1-6",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "christmas": {
      "expression": "fbref.week >= 17 && fbref.week <= 22",
      "description": "weeks 17-22",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "finalStretch": {
      "expression": "fbref.week >= 32 && fbref.week <= 38",
      "description": "weeks 32-38",
      "displayExpression": [
        "fbref.week"
      ]
    },
    "businessEnd": {
      "expression": "fbref.week >= 28",
      "description": "Week 28+",
      "displayExpression": [
        "fbref.week"
      ]
    }
  },
  "ahLevel": {
    "homeFavorite": {
      "expression": "match.asianHandicapOdds.homeHandicap < 0",
      "description": "Home team is favored"
    },
    "awayFavorite": {
      "expression": "match.asianHandicapOdds.awayHandicap < 0",
      "description": "Away team is favored"
    },
    "quarterHandicap": {
      "expression": "match.asianHandicapOdds.homeHandicap % 1 !== 0",
      "description": "Quarter/split handicaps (0.25, -0.25..)"
    },
    "equalHandicap": {
      "expression": "match.asianHandicapOdds.homeHandicap % 1 === 0",
      "description": "Simple handicaps (0,1,2...)"
    },
    "extremeHomeFavorites": {
      "expression": "match.asianHandicapOdds.homeHandicap <= -2",
      "description": "Negative handicap >= -2"
    },
    "extremeAwayFavorites": {
      "expression": "match.asianHandicapOdds.awayHandicap <= -2",
      "description": "Positive handicap >= -2"
    },
    "minus 3": {
      "expression": "match.asianHandicapOdds.homeHandicap === -3",
      "description": "Deep handicap -3"
    },
    "minus 2.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === -3.25",
      "description": "Quarter handicap -3.25"
    },
    "minus 2.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === -2.25",
      "description": "Quarter handicap -2.25"
    },
    "minus 2": {
      "expression": "match.asianHandicapOdds.homeHandicap === -2",
      "description": "Deep handicap -2"
    },
    "minus 1.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === -1.75",
      "description": "Quarter handicap -1.75"
    },
    "minus 1.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === -1.25",
      "description": "Quarter handicap -1.25"
    },
    "minus 1": {
      "expression": "match.asianHandicapOdds.homeHandicap === -1",
      "description": "Handicap -1"
    },
    "minus 0.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === -0.75",
      "description": "Quarter handicap -0.75"
    },
    "minus 0.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === -0.25",
      "description": "Quarter handicap -0.25"
    },
    "zero": {
      "expression": "match.asianHandicapOdds.homeHandicap === 0",
      "description": "Level handicap 0"
    },
    "plus 0.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === 0.25",
      "description": "Quarter handicap 0.25"
    },
    "plus 0.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === 0.75",
      "description": "Quarter handicap 0.75"
    },
    "plus 1": {
      "expression": "match.asianHandicapOdds.homeHandicap === 1",
      "description": "Handicap 1"
    },
    "plus 1.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === 1.25",
      "description": "Quarter handicap 1.25"
    },
    "plus 1.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === 1.75",
      "description": "Quarter handicap 1.75"
    },
    "plus 2.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === 2.25",
      "description": "Quarter handicap 2.25"
    },
    "plus 2": {
      "expression": "match.asianHandicapOdds.homeHandicap === 2",
      "description": "Handicap 2"
    },
    "plus 2.75": {
      "expression": "match.asianHandicapOdds.homeHandicap === 2.75",
      "description": "Quarter handicap 2.75"
    },
    "plus 3.25": {
      "expression": "match.asianHandicapOdds.homeHandicap === 3.25",
      "description": "Quarter handicap 3.25"
    },
    "plus 3": {
      "expression": "match.asianHandicapOdds.homeHandicap === 3",
      "description": "Handicap 3"
    }
  },
  "oddsLevel": {
    "balanced": {
      "expression": "Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 2",
      "description": "Max odds ≤ 2.00 (balanced)",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "extreme": {
      "expression": "Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) > 2",
      "description": "Max odds > 2.00 (extreme)",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "trapped": {
      "expression": "Math.min(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 1.72",
      "description": "Trapped pricing ≤1.72",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "ultraTrapped": {
      "expression": "Math.min(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 1.65",
      "description": "Ultra trapped pricing ≤1.65",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "closeOdds": {
      "expression": "Math.abs(match.asianHandicapOdds.homeOdds - match.asianHandicapOdds.awayOdds) <= 0.1",
      "description": "Very close odds (≤0.1 difference)",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "goodAwayValue": {
      "expression": "match.asianHandicapOdds.awayOdds >= 1.85 && match.asianHandicapOdds.awayOdds <= 2.1",
      "description": "Good away value range 1.85-2.10",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    },
    "optimalAwayValue": {
      "expression": "match.asianHandicapOdds.awayOdds >= 1.9 && match.asianHandicapOdds.awayOdds <= 2.1",
      "description": "Optimal away value range 1.90-2.10",
      "displayExpression": [
        "asianHandicapOdds.homeOdds",
        "asianHandicapOdds.awayOdds"
      ]
    }
  },
  "context": {
    "topSixHome": {
      "expression": "fbref.week >= 6 && (timeSeries.home.leaguePosition || 20) <= 6",
      "description": "Top 6 teams playing at home",
      "displayExpression": [
        "timeSeries.home.leaguePosition"
      ]
    },
    "topSixAway": {
      "expression": "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) <= 6",
      "description": "Top 6 teams playing away",
      "displayExpression": [
        "timeSeries.away.leaguePosition"
      ]
    },
    "bottomSixHome": {
      "expression": "fbref.week >= 6 && (timeSeries.home.leaguePosition || 20) >= 15",
      "description": "Bottom 6 teams playing at home",
      "displayExpression": [
        "timeSeries.home.leaguePosition"
      ]
    },
    "bottomSixAway": {
      "expression": "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) >= 15",
      "description": "Bottom 6 teams playing away",
      "displayExpression": [
        "timeSeries.away.leaguePosition"
      ]
    },
    "topTenAway": {
      "expression": "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) <= 10",
      "description": "Top 10 teams playing away (undervalued quality)",
      "displayExpression": [
        "timeSeries.away.leaguePosition"
      ]
    },
    "relegationBattle": {
      "expression": "((timeSeries.home.leaguePosition || 20) >= 16 && (timeSeries.away.leaguePosition || 20) >= 16)",
      "description": "Both teams are bottom 4",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    },
    "lateRelegationBattle": {
      "expression": "fbref.week >= 25 && ((timeSeries.home.leaguePosition || 20) >= 16 && (timeSeries.away.leaguePosition || 20) >= 16)",
      "description": "Week >= 25, Both teams are bottom 4",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    },
    "europeanStakes": {
      "expression": "fbref.week >= 25 && ((timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.away.leaguePosition || 20) <= 8)",
      "description": "Both teams are Top 8",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    },
    "giantKilling": {
      "expression": "(timeSeries.home.leaguePosition || 20) >= 15 && (timeSeries.away.leaguePosition || 20) <= 6",
      "description": "Lower team vs top 6",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    }
  },
  "matchUp": {
    "balance": {
      "expression": "Math.abs(preMatch.marketEfficiency.homeImpliedProb - 0.5) <= 0.1",
      "description": "Balanced implied probability (40-60%)",
      "displayExpression": [
        "preMatch.marketEfficiency.homeImpliedProb"
      ]
    },
    "extreme": {
      "expression": "Math.abs(preMatch.marketEfficiency.homeImpliedProb - 0.5) > 0.2",
      "description": "Extreme implied probability (<30% or >70%)",
      "displayExpression": [
        "preMatch.marketEfficiency.homeImpliedProb"
      ]
    },
    "extremeAway": {
      "expression": "Math.abs(preMatch.marketEfficiency.homeImpliedProb - 0.5) > 0.2 && (timeSeries.away.leaguePosition || 20) <= 6",
      "description": "Extreme implied probability (<30% or >70%) and away team is top 6",
      "displayExpression": [
        "preMatch.marketEfficiency.homeImpliedProb"
      ]
    },
    "extremeHome": {
      "expression": "Math.abs(preMatch.marketEfficiency.homeImpliedProb - 0.5) > 0.2 && (timeSeries.home.leaguePosition || 20) <= 6",
      "description": "Extreme implied probability (<30% or >70%) and home team is top 6",
      "displayExpression": [
        "preMatch.marketEfficiency.homeImpliedProb"
      ]
    },
    "top6Clash": {
      "expression": "(timeSeries.home.leaguePosition || 20) <= 6 && (timeSeries.away.leaguePosition || 20) <= 6",
      "description": "Top 6 teams playing at home and away (clash)",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    },
    "top8Clash": {
      "expression": "(timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.away.leaguePosition || 20) <= 8",
      "description": "Top 6 teams playing at home and away (clash)",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    }
  },
  "irregularity": {
    "xgMismatch": {
      "expression": "Math.abs((timeSeries.home.averages.overall.xGFor - timeSeries.away.averages.overall.xGFor) - (preMatch.marketEfficiency.homeImpliedProb - 0.5)) > 0.15",
      "description": "XG difference doesn't match implied probability (mismatch > 10%)"
    },
    "goalDifferenceMismatch": {
      "expression": "Math.abs((timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) - (preMatch.marketEfficiency.homeImpliedProb - 0.5)) > 0.15",
      "description": "Goal difference doesn't match implied probability (mismatch > 15%)"
    },
    "xgUnderperformance": {
      "expression": "(timeSeries.home.averages.overall.xGFor - timeSeries.away.averages.overall.xGFor) < (timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) - 0.3",
      "description": "Home team XG difference significantly underperforming actual goal difference (by 0.3+ goals)"
    },
    "xgOverperformance": {
      "expression": "(timeSeries.home.averages.overall.xGFor - timeSeries.away.averages.overall.xGFor) > (timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) + 0.3",
      "description": "Home team XG difference significantly overperforming actual goal difference (by 0.3+ goals)"
    },
    "positionFormDivergence": {
      "expression": "Math.abs((timeSeries.home.leaguePosition || 20) - (timeSeries.away.leaguePosition || 20)) > 8 && Math.abs((timeSeries.home.streaks.overall?.current?.count || 0) - (timeSeries.away.streaks.overall?.current?.count || 0)) > 3",
      "description": "Large position gap (>8) with diverging current form (>3 streak difference)",
      "displayExpression": [
        "timeSeries.home.leaguePosition",
        "timeSeries.away.leaguePosition"
      ]
    }
  },
  "streaking": {
    "HomeWinAHStreak": {
      "expression": "timeSeries.home.streaks.asianHandicap?.current?.type === 'win' && timeSeries.home.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.asianHandicap?.current?.count"
      ],
      "description": "Home team on 2+ game AH win streak"
    },
    "HomeLossAHStreak": {
      "expression": "timeSeries.home.streaks.asianHandicap?.current?.type === 'loss' && timeSeries.home.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.asianHandicap?.current?.count"
      ],
      "description": "Home team on 2+ game AH loss streak"
    },
    "AwayWinAHStreak": {
      "expression": "timeSeries.away.streaks.asianHandicap?.current?.type === 'win' && timeSeries.away.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.away.streaks.asianHandicap?.current?.count"
      ],
      "description": "Away team on 2+ game AH win streak"
    },
    "AwayLossAHStreak": {
      "expression": "timeSeries.away.streaks.asianHandicap?.current?.type === 'loss' && timeSeries.away.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.away.streaks.asianHandicap?.current?.count"
      ],
      "description": "Away team on 2+ game AH loss streak"
    },
    "homeWinStreak": {
      "expression": "timeSeries.home.streaks.overall?.current?.type === 'win' && timeSeries.home.streaks.overall?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.overall?.current?.count"
      ],
      "description": "Home team on 2+ game win streak"
    },
    "homeLossStreak": {
      "expression": "timeSeries.home.streaks.overall?.current?.type === 'loss' && timeSeries.home.streaks.overall?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.overall?.current?.count"
      ],
      "description": "Home team on 2+ game loss streak"
    },
    "awayWinStreak": {
      "expression": "timeSeries.away.streaks.overall?.current?.type === 'win' && timeSeries.away.streaks.overall?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.away.streaks.overall?.current?.count"
      ],
      "description": "Away team on 2+ game win streak"
    },
    "awayLossStreak": {
      "expression": "timeSeries.away.streaks.overall?.current?.type === 'loss' && timeSeries.away.streaks.overall?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.away.streaks.overall?.current?.count"
      ],
      "description": "Away team on 2+ game loss streak"
    },
    "homeVenueStreak": {
      "expression": "timeSeries.home.streaks.home?.current?.type === 'win' && timeSeries.home.streaks.home?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.home?.current?.count"
      ],
      "description": "Home team on 2+ home game win streak"
    },
    "awayVenueStreak": {
      "expression": "timeSeries.away.streaks.away?.current?.type === 'win' && timeSeries.away.streaks.away?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.away.streaks.away?.current?.count"
      ],
      "description": "Away team on 2+ away game win streak"
    },
    "longStreak": {
      "expression": "(timeSeries.home.streaks.overall?.current?.count >= 3 || timeSeries.away.streaks.overall?.current?.count >= 3)",
      "displayExpression": [
        "Math.max(timeSeries.home.streaks.overall?.current?.count || 0, timeSeries.away.streaks.overall?.current?.count || 0)"
      ],
      "description": "Either team on 3+ game streak"
    },
    "momentumReversal": {
      "expression": "timeSeries.home.streaks.overall?.current?.type === 'loss' && timeSeries.home.streaks.overall?.longest.win >= 2 && timeSeries.away.streaks.overall?.current?.type === 'win' && timeSeries.away.streaks.overall?.longest.loss >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.overall?.longest.win",
        "timeSeries.away.streaks.overall?.longest.loss"
      ],
      "description": "Home team losing after winning streak, away team winning after losing streak"
    },
    "handicapStreak": {
      "expression": "timeSeries.home.streaks.asianHandicap?.current?.type === 'win' && timeSeries.home.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.asianHandicap?.current?.count"
      ],
      "description": "Home team on 2+ game AH win streak"
    },
    "handicapLossStreak": {
      "expression": "timeSeries.home.streaks.asianHandicap?.current?.type === 'loss' && timeSeries.home.streaks.asianHandicap?.current?.count >= 2",
      "displayExpression": [
        "timeSeries.home.streaks.asianHandicap?.current?.count"
      ],
      "description": "Home team on 2+ game AH loss streak"
    },
    "streakFatigue": {
      "expression": "timeSeries.home.streaks.overall?.current?.count >= 4 || timeSeries.away.streaks.overall?.current?.count >= 4",
      "displayExpression": [
        "timeSeries.away.streaks.overall?.current?.count"
      ],
      "description": "Either team on 4+ game streak"
    }
  }
}
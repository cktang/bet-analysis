{
  "totalStrategies": 50,
  "validStrategies": 41,
  "invalidStrategies": 9,
  "contaminated": [
    {
      "name": "Single_homeWinOdds",
      "factors": [
        "match.homeWinOdds"
      ],
      "issues": [
        "Factor 1 (match.homeWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "Win_Odds_Ratio",
      "factors": [
        "match.homeWinOdds / match.awayWinOdds"
      ],
      "issues": [
        "Factor 1 (match.homeWinOdds / match.awayWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent",
        "Factor 1 (match.homeWinOdds / match.awayWinOdds): Uses 1X2 factor 'awayWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "Adaptive_Adaptive_Ratio_AH_vs_1X2_Comparison_Plus_preMatch_enhanced_homeValueBet",
      "factors": [
        "(match.asianHandicapOdds.homeOdds) / (match.homeWinOdds)",
        "preMatch.enhanced.homeValueBet"
      ],
      "issues": [
        "Factor 1 ((match.asianHandicapOdds.homeOdds) / (match.homeWinOdds)): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "Adaptive_Adaptive_Ratio_AH_vs_1X2_Comparison_Plus_preMatch_fbref_week",
      "factors": [
        "(match.asianHandicapOdds.homeOdds) / (match.homeWinOdds)",
        "preMatch.fbref.week"
      ],
      "issues": [
        "Factor 1 ((match.asianHandicapOdds.homeOdds) / (match.homeWinOdds)): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "Falling_Giant_Fade",
      "factors": [
        "((timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.home.streaks.overall.longest.loss || 0) >= 3 && enhanced.preMatch.marketEfficiency.homeImpliedProb > 0.5) ? 1 : 0",
        "match.homeWinOdds"
      ],
      "issues": [
        "Factor 1 (((timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.home.streaks.overall.longest.loss || 0) >= 3 && enhanced.preMatch.marketEfficiency.homeImpliedProb > 0.5) ? 1 : 0): Uses 1X2 factor 'homeImpliedProb' - should use Asian Handicap equivalent",
        "Factor 2 (match.homeWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "CrossRule_homePosition_x_homeWinOdds",
      "factors": [
        "timeSeries.home.leaguePosition || 20",
        "match.homeWinOdds"
      ],
      "issues": [
        "Factor 2 (match.homeWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "Rising_Underdog_Back",
      "factors": [
        "((timeSeries.away.leaguePosition || 20) >= 12 && (timeSeries.away.streaks.overall.current.type === 'W' || timeSeries.away.streaks.overall.current.type === 'win') && (timeSeries.away.streaks.overall.current.count || 0) >= 2 && enhanced.preMatch.marketEfficiency.awayImpliedProb < 0.25) ? 1 : 0",
        "match.awayWinOdds"
      ],
      "issues": [
        "Factor 1 (((timeSeries.away.leaguePosition || 20) >= 12 && (timeSeries.away.streaks.overall.current.type === 'W' || timeSeries.away.streaks.overall.current.type === 'win') && (timeSeries.away.streaks.overall.current.count || 0) >= 2 && enhanced.preMatch.marketEfficiency.awayImpliedProb < 0.25) ? 1 : 0): Uses 1X2 factor 'awayImpliedProb' - should use Asian Handicap equivalent",
        "Factor 2 (match.awayWinOdds): Uses 1X2 factor 'awayWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_homeWinOdds",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "match.homeWinOdds"
      ],
      "issues": [
        "Factor 2 (match.homeWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    },
    {
      "name": "CrossRule_weekInSeason_x_homeWinOdds",
      "factors": [
        "fbref.week",
        "match.homeWinOdds"
      ],
      "issues": [
        "Factor 2 (match.homeWinOdds): Uses 1X2 factor 'homeWinOdds' - should use Asian Handicap equivalent"
      ],
      "isValid": false
    }
  ],
  "clean": [
    {
      "name": "Season_Fatigue",
      "factors": [
        "fbref.week"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_handicapLine",
      "factors": [
        "parseFloat(match.asianHandicapOdds.homeHandicap.split('/')[0])"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Position_Gap_Analysis",
      "factors": [
        "(timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_positionGap",
      "factors": [
        "(timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homePosition",
      "factors": [
        "timeSeries.home.leaguePosition || 20"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeGoalDiff",
      "factors": [
        "timeSeries.home.cumulative.overall.goalDifference || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeTopSix",
      "factors": [
        "(timeSeries.home.leaguePosition || 20) <= 6 ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeWinStreak",
      "factors": [
        "timeSeries.home.streaks.overall.longest.win || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayGoalDiff",
      "factors": [
        "timeSeries.away.cumulative.overall.goalDifference || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayPosition",
      "factors": [
        "timeSeries.away.leaguePosition || 20"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_attendance",
      "factors": [
        "fbref.attendance"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeLossStreak",
      "factors": [
        "timeSeries.home.streaks.overall.longest.loss || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeBottomThree",
      "factors": [
        "(timeSeries.home.leaguePosition || 20) >= 18 ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayLossStreak",
      "factors": [
        "timeSeries.away.streaks.overall.longest.loss || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayTopSix",
      "factors": [
        "(timeSeries.away.leaguePosition || 20) <= 6 ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayBottomThree",
      "factors": [
        "(timeSeries.away.leaguePosition || 20) >= 18 ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayWinStreak",
      "factors": [
        "timeSeries.away.streaks.overall.longest.win || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_positionGapAbs",
      "factors": [
        "Math.abs((timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20))"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Combined_Position_Strength",
      "factors": [
        "((timeSeries.home.leaguePosition || 20) + (timeSeries.away.leaguePosition || 20)) / 2"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_combinedPosition",
      "factors": [
        "(timeSeries.home.leaguePosition || 20) + (timeSeries.away.leaguePosition || 20)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_averagePosition",
      "factors": [
        "((timeSeries.home.leaguePosition || 20) + (timeSeries.away.leaguePosition || 20)) / 2"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_homeCurrentStreak",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_awayCurrentStreak",
      "factors": [
        "timeSeries.away.streaks.overall.current.count || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Streak_Length_Disparity",
      "factors": [
        "Math.abs((timeSeries.home.streaks.overall.current.count || 0) - (timeSeries.away.streaks.overall.current.count || 0))"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Single_weekInSeason",
      "factors": [
        "fbref.week"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Early_Season_Position_Rescue",
      "factors": [
        "(fbref.week <= 6) ? 1 : 0",
        "(timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homePosition_x_lateSeasonTopSix",
      "factors": [
        "timeSeries.home.leaguePosition || 20",
        "(fbref.week >= 30 && (timeSeries.home.leaguePosition || 20) <= 6) ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homePosition_x_motivatedPositionHome",
      "factors": [
        "timeSeries.home.leaguePosition || 20",
        "((timeSeries.home.leaguePosition || 20) <= 6 && fbref.week >= 30) ? (7 - (timeSeries.home.leaguePosition || 20)) : (((timeSeries.home.leaguePosition || 20) >= 17 && fbref.week >= 25) ? (21 - (timeSeries.home.leaguePosition || 20)) : 0)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_homePosition",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "timeSeries.home.leaguePosition || 20"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homePosition_x_streakDifferential",
      "factors": [
        "timeSeries.home.leaguePosition || 20",
        "(timeSeries.home.streaks.overall.current.count || 0) - (timeSeries.away.streaks.overall.current.count || 0)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homePosition_x_titleRacePressure",
      "factors": [
        "timeSeries.home.leaguePosition || 20",
        "Math.max(0, 18 - (timeSeries.home.leaguePosition || 20)) + Math.max(0, 18 - (timeSeries.away.leaguePosition || 20))"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_weekInSeason_x_homePosition",
      "factors": [
        "fbref.week",
        "timeSeries.home.leaguePosition || 20"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Smart_Position_Gap",
      "factors": [
        "(Math.abs((timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20)) >= 8) && (((timeSeries.home.leaguePosition || 20) <= 6 || (timeSeries.away.leaguePosition || 20) <= 6) || ((timeSeries.home.leaguePosition || 20) >= 15 || (timeSeries.away.leaguePosition || 20) >= 15)) ? 1 : 0",
        "((timeSeries.away.leaguePosition || 20) - (timeSeries.home.leaguePosition || 20) > 5) && ((timeSeries.home.streaks.overall.form.winRate || 0) - (timeSeries.away.streaks.overall.form.winRate || 0) > 0.3) ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_titleRacePressure",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "Math.max(0, 18 - (timeSeries.home.leaguePosition || 20)) + Math.max(0, 18 - (timeSeries.away.leaguePosition || 20))"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_lateSeasonTopSix",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "(fbref.week >= 30 && (timeSeries.home.leaguePosition || 20) <= 6) ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_streakDifferential",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "(timeSeries.home.streaks.overall.current.count || 0) - (timeSeries.away.streaks.overall.current.count || 0)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_homeCurrentStreak_x_motivatedPositionHome",
      "factors": [
        "timeSeries.home.streaks.overall.current.count || 0",
        "((timeSeries.home.leaguePosition || 20) <= 6 && fbref.week >= 30) ? (7 - (timeSeries.home.leaguePosition || 20)) : (((timeSeries.home.leaguePosition || 20) >= 17 && fbref.week >= 25) ? (21 - (timeSeries.home.leaguePosition || 20)) : 0)"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Late_Season_Pressure_Rescue",
      "factors": [
        "(fbref.week >= 30 && (timeSeries.home.leaguePosition || 20) <= 6) ? 1 : 0",
        "(fbref.week >= 30 && (timeSeries.away.leaguePosition || 20) <= 6) ? 1 : 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_weekInSeason_x_titleRacePressure",
      "factors": [
        "fbref.week",
        "Math.max(0, 18 - (timeSeries.home.leaguePosition || 20)) + Math.max(0, 18 - (timeSeries.away.leaguePosition || 20))"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "CrossRule_weekInSeason_x_homeCurrentStreak",
      "factors": [
        "fbref.week",
        "timeSeries.home.streaks.overall.current.count || 0"
      ],
      "issues": [],
      "isValid": true
    },
    {
      "name": "Six_Pointer_Rescue",
      "factors": [
        "((timeSeries.home.leaguePosition || 20) >= 17 && (timeSeries.away.leaguePosition || 20) >= 17) ? 1 : 0",
        "fbref.week"
      ],
      "issues": [],
      "isValid": true
    }
  ]
}
// Systematic Factor Definitions for Automated Pattern Discovery
// These are the core factors that will be combined mechanically to find anomalies

module.exports = {

    //MANUAL EDITED, AGENT DO NOT EDIT THIS FILE WITHOUT ASKING

    // === MANDATORY FACTORS (MUST BE CHOSEN FIRST) ===
    mandatory: {
        // BET SIDE (Required - pick one)
        side: {
            home: {
                expression: "true",
                description: "Bet on home team",
                betSide: "home"
            },
            away: {
                expression: "true", 
                description: "Bet on away team",
                betSide: "away"
            },
            higherOdds: {
                expression: "true",
                description: "Bet on team with higher odds",
                betSide: "match.asianHandicapOdds.homeOdds > match.asianHandicapOdds.awayOdds ? 'home' : 'away'"
            },
            lowerOdds: {
                expression: "true",
                description: "Bet on team with lower odds", 
                betSide: "match.asianHandicapOdds.homeOdds < match.asianHandicapOdds.awayOdds ? 'home' : 'away'"
            }
        },
        
        // STAKING METHOD (Required - pick one)
        size: {
            fix: {
                expression: "200",
                description: "Fixed stake betting",
                stakingMethod: "fixed"
            },
            dynamic: {
                expression: "match.asianHandicapOdds.homeOdds <= 1.88 || match.asianHandicapOdds.awayOdds <= 1.88 ? 200 : 200 + Math.floor((Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) - 1.88) * 100) * 150", 
                description: "Variable staking: $200 if odds <=1.88, else +$150 per 0.01",
                stakingMethod: "variable"
            }
        }
    },

    // === TIME OF SEASON FACTORS ===
    time: {
        earlySeason: {
            expression: "fbref.week >= 1 && fbref.week <= 8",
            description: "Early season weeks 1-8"
        },
        midSeason: {
            expression: "fbref.week >= 9 && fbref.week <= 24",
            description: "Mid season weeks 9-24"
        },
        lateSeason: {
            expression: "fbref.week >= 25 && fbref.week <= 38",
            description: "Late season weeks 25-38"
        },
        veryEarly: {
            expression: "fbref.week >= 1 && fbref.week <= 4",
            description: "Very early season weeks 1-4"
        },
        ultraEarly: {
            expression: "fbref.week >= 1 && fbref.week <= 6",
            description: "Ultra early season weeks 1-6 (highest uncertainty)"
        },
        christmas: {
            expression: "fbref.week >= 17 && fbref.week <= 22",
            description: "Christmas period weeks 17-22"
        },
        finalStretch: {
            expression: "fbref.week >= 32 && fbref.week <= 38",
            description: "Final stretch weeks 32-38"
        },
        businessEnd: {
            expression: "fbref.week >= 28",
            description: "Business end of season (high stakes)"
        }
    },

    // === ASIAN HANDICAP LEVEL FACTORS ===
    ahLevel: {
        "homeFavorite": {
            expression: "match.asianHandicapOdds.homeHandicap.includes('/') && parseFloat(match.asianHandicapOdds.homeHandicap.split('/')[0]) < 0",
            description: "Quarter handicaps where home team is favored (negative handicap)"
        },
        "awayFavorite": {
            expression: "match.asianHandicapOdds.awayHandicap.includes('/') && parseFloat(match.asianHandicapOdds.awayHandicap.split('/')[0]) < 0",
            description: "Quarter handicaps where away team is favored (negative handicap)"
        },
        "homeUnderdog": {
            expression: "match.asianHandicapOdds.homeHandicap.includes('/') && parseFloat(match.asianHandicapOdds.homeHandicap.split('/')[0]) > 0",
            description: "Quarter handicaps where home team is underdog (positive handicap)"
        },
        "awayUnderdog": {
            expression: "match.asianHandicapOdds.awayHandicap.includes('/') && parseFloat(match.asianHandicapOdds.awayHandicap.split('/')[0]) > 0",
            description: "Quarter handicaps where away team is underdog (positive handicap)"
        },
        "-3": {
            expression: "match.asianHandicapOdds.homeHandicap === '-3'",
            description: "Deep handicap -3"
        },
        "-2.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '-3/-3.5'",
            description: "Quarter handicap -3/-3.5"
        },
        "-2.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '-2/-2.5'",
            description: "Quarter handicap -2/-2.5"
        },
        "-2": {
            expression: "match.asianHandicapOdds.homeHandicap === '-2'",
            description: "Deep handicap -2"
        },
        "-1.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '-1.5/-2'",
            description: "Quarter handicap -1.5/-2"
        },
        "-1.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '-1/-1.5'",
            description: "Quarter handicap -1/-1.5"
        },
        "-0.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '-0.5/-1'",
            description: "Quarter handicap -0.5/-1"
        },
        "-0.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '0/-0.5'",
            description: "Quarter handicap 0/-0.5"
        },
        "0": {
            expression: "match.asianHandicapOdds.homeHandicap === '0'",
            description: "Level handicap 0"
        },
        "0.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '+0.5/+1'",
            description: "Quarter handicap +0.5/+1"
        },
        "0.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '+1/+1.5'",
            description: "Quarter handicap +1/+1.5"
        },
        "1.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '+1.5/+2'",
            description: "Quarter handicap +1.5/+2"
        },
        "1.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '+2/+2.5'",
            description: "Quarter handicap +2/+2.5"
        },
        "2": {
            expression: "match.asianHandicapOdds.homeHandicap === '+2'",
            description: "Handicap +2"
        },
        "2.25": {
            expression: "match.asianHandicapOdds.homeHandicap === '+2.5/+3'",
            description: "Quarter handicap +2.5/+3"
        },
        "2.75": {
            expression: "match.asianHandicapOdds.homeHandicap === '+3/+3.5'",
            description: "Quarter handicap +3/+3.5"
        },
        "3": {
            expression: "match.asianHandicapOdds.homeHandicap === '+3'",
            description: "Handicap +3"
        },
    },

    // === ODDS LEVEL FACTORS ===
    oddsLevel: {
        balanced: {
            expression: "Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 2",
            description: "Max odds ≤ 2.00 (balanced market)"
        },
        extreme: {
            expression: "Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) > 2",
            description: "Max odds > 2.00 (extreme market)"
        },
        sweetSpot: {
            expression: "Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) >= 2.00 && Math.max(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 2.30",
            description: "Sweet spot odds range 2.00-2.30 (optimal ROI zone)"
        },
        trapped: {
            expression: "Math.min(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 1.72",
            description: "Trapped pricing ≤1.72 (HKJC structural inefficiency)"
        },
        ultraTrapped: {
            expression: "Math.min(match.asianHandicapOdds.homeOdds, match.asianHandicapOdds.awayOdds) <= 1.65",
            description: "Ultra trapped pricing ≤1.65 (extreme HKJC confidence)"
        },
        closeOdds: {
            expression: "Math.abs(match.asianHandicapOdds.homeOdds - match.asianHandicapOdds.awayOdds) <= 0.1",
            description: "Very close odds (≤0.1 difference - true toss-up)"
        },
        goodAwayValue: {
            expression: "match.asianHandicapOdds.awayOdds >= 1.85 && match.asianHandicapOdds.awayOdds <= 2.1",
            description: "Good away value range 1.85-2.10"
        },
        optimalAwayValue: {
            expression: "match.asianHandicapOdds.awayOdds >= 1.9 && match.asianHandicapOdds.awayOdds <= 2.1",
            description: "Optimal away value range 1.90-2.10"
        }
    },

    // === QUARTER VS NON-QUARTER FACTORS ===
    handicapType: {
        quarter: {
            expression: "match.asianHandicapOdds.homeHandicap.includes('/')",
            description: "Quarter/split handicaps (HKJC system)"
        },
        eqaul: {
            expression: "!match.asianHandicapOdds.homeHandicap.includes('/')",
            description: "Simple handicaps (non-split)"
        },
        profit: {
            expression: "match.asianHandicapOdds.homeHandicap === '0/-0.5'",
            description: "Even-ish quarter handicaps"
        },
        negative: {
            expression: "match.asianHandicapOdds.homeHandicap === '-0.5/-1' || match.asianHandicapOdds.homeHandicap === '-1/-1.5'",
            description: "Negative quarter handicaps"
        },
        trappedQuarter: {
            expression: "match.asianHandicapOdds.homeHandicap.includes('/') && (match.asianHandicapOdds.homeOdds <= 1.72 || match.asianHandicapOdds.awayOdds <= 1.72)",
            description: "Trapped quarter handicaps (structural HKJC inefficiency)"
        }
    },

    // === ADDITIONAL CONTEXT FACTORS ===
    context: {
        topSixHome: {
            expression: "fbref.week >= 6 && (timeSeries.home.leaguePosition || 20) <= 6",
            description: "Top 6 teams playing at home"
        },
        topSixAway: {
            expression: "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) <= 6",
            description: "Top 6 teams playing away"
        },
        bottomSixHome: {
            expression: "fbref.week >= 6 && (timeSeries.home.leaguePosition || 20) >= 15",
            description: "Bottom 6 teams playing at home"
        },
        bottomSixAway: {
            expression: "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) >= 15",
            description: "Bottom 6 teams playing away"
        },
        topTenAway: {
            expression: "fbref.week >= 6 && (timeSeries.away.leaguePosition || 20) <= 10",
            description: "Top 10 teams playing away (undervalued quality)"
        },
        relegationBattle: {
            expression: "fbref.week >= 25 && ((timeSeries.home.leaguePosition || 20) >= 16 && (timeSeries.away.leaguePosition || 20) >= 16)",
            description: "Both teams in relegation battle (late season)"
        },
        europeanStakes: {
            expression: "fbref.week >= 25 && ((timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.away.leaguePosition || 20) <= 8)",
            description: "Both teams competing for European spots"
        },
        giantKilling: {
            expression: "(timeSeries.home.leaguePosition || 20) >= 15 && (timeSeries.away.leaguePosition || 20) <= 6",
            description: "Lower team vs top 6 (giant killing scenario)"
        }
    },

    matchUp: {
        balance: {
            expression: "Math.abs(preMatch.enhanced.homeImpliedProb - 0.5) <= 0.1",
            description: "Balanced implied probability (40-60%)"
        },
        extreme: {
            expression: "Math.abs(preMatch.enhanced.homeImpliedProb - 0.5) > 0.2",
            description: "Extreme implied probability (<30% or >70%)"
        },
        extremeAway: {
            expression: "Math.abs(preMatch.enhanced.homeImpliedProb - 0.5) > 0.2 && (timeSeries.away.leaguePosition || 20) <= 6",
            description: "Extreme implied probability (<30% or >70%) and away team is top 6"
        },
        extremeHome: {
            expression: "Math.abs(preMatch.enhanced.homeImpliedProb - 0.5) > 0.2 && (timeSeries.home.leaguePosition || 20) <= 6",
            description: "Extreme implied probability (<30% or >70%) and home team is top 6"
        },
        topSizeClash: {
            expression: "(timeSeries.home.leaguePosition || 20) <= 6 && (timeSeries.away.leaguePosition || 20) <= 6",
            description: "Top 6 teams playing at home and away (clash)"
        }
    },

    irregularity: {
        xgMismatch: {
            expression: "Math.abs((timeSeries.home.averages.overall.xGDifference - timeSeries.away.averages.overall.xGDifference) - (preMatch.enhanced.homeImpliedProb - 0.5)) > 0.15",
            description: "XG difference doesn't match implied probability (mismatch > 15%)"
        },
        goalDifferenceMismatch: {
            expression: "Math.abs((timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) - (preMatch.enhanced.homeImpliedProb - 0.5)) > 0.15",
            description: "Goal difference doesn't match implied probability (mismatch > 15%)"
        },
        
        xgUnderperformance: {
            expression: "(timeSeries.home.averages.overall.xGFor - timeSeries.away.averages.overall.xGFor) < (timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) - 0.3",
            description: "Home team XG difference significantly underperforming actual goal difference (by 0.3+ goals)"
        },
        xgOverperformance: {
            expression: "(timeSeries.home.averages.overall.xGFor - timeSeries.away.averages.overall.xGFor) > (timeSeries.home.averages.overall.goalsFor - timeSeries.away.averages.overall.goalsFor) + 0.3",
            description: "Home team XG difference significantly overperforming actual goal difference (by 0.3+ goals)"
        },
        positionFormDivergence: {
            expression: "Math.abs((timeSeries.home.leaguePosition || 20) - (timeSeries.away.leaguePosition || 20)) > 8 && Math.abs((timeSeries.home.streaks.overall.current.count || 0) - (timeSeries.away.streaks.overall.current.count || 0)) > 3",
            description: "Large position gap (>8) with diverging current form (>3 streak difference)"
        }
    },

    streaking: {
        homeWinStreak: {
            expression: "timeSeries.home.streaks.overall.current.type === 'win' && timeSeries.home.streaks.overall.current.count >= 2",
            description: "Home team on 2+ game win streak"
        },
        homeLossStreak: {
            expression: "timeSeries.home.streaks.overall.current.type === 'loss' && timeSeries.home.streaks.overall.current.count >= 2",
            description: "Home team on 2+ game loss streak"
        },
        awayWinStreak: {
            expression: "timeSeries.away.streaks.overall.current.type === 'win' && timeSeries.away.streaks.overall.current.count >= 2",
            description: "Away team on 2+ game win streak"
        },
        awayLossStreak: {
            expression: "timeSeries.away.streaks.overall.current.type === 'loss' && timeSeries.away.streaks.overall.current.count >= 2",
            description: "Away team on 2+ game loss streak"
        },
        homeVenueStreak: {
            expression: "timeSeries.home.streaks.venue.current.type === 'win' && timeSeries.home.streaks.venue.current.count >= 2",
            description: "Home team on 2+ home game win streak"
        },
        awayVenueStreak: {
            expression: "timeSeries.away.streaks.venue.current.type === 'win' && timeSeries.away.streaks.venue.current.count >= 2",
            description: "Away team on 2+ away game win streak"
        },
        longStreak: {
            expression: "(timeSeries.home.streaks.overall.current.count >= 3 || timeSeries.away.streaks.overall.current.count >= 3)",
            description: "Either team on 3+ game streak"
        },
        momentumReversal: {
            expression: "timeSeries.home.streaks.overall.current.type === 'loss' && timeSeries.home.streaks.overall.longest.win >= 2 && timeSeries.away.streaks.overall.current.type === 'win' && timeSeries.away.streaks.overall.longest.loss >= 2",
            description: "Home team losing after winning streak, away team winning after losing streak"
        },

        handicapStreak: {
            expression: "timeSeries.home.streaks.handicap.current.type === 'win' && timeSeries.home.streaks.handicap.current.count >= 2",
            description: "Home team on 2+ game win streak"
        },
        handicapLossStreak: {
            expression: "timeSeries.home.streaks.handicap.current.type === 'loss' && timeSeries.home.streaks.handicap.current.count >= 2",
            description: "Home team on 2+ game loss streak"
        },
        streakFatigue: {
            expression: "timeSeries.home.streaks.overall.current.count >= 4 || timeSeries.away.streaks.overall.current.count >= 4",
            description: "Either team on 4+ game streak (fatigue/regression risk)"
        }
    },

    // this is to allow for more flexibility in the streak factors
    // streaking2: {
    //     homeWinStreak: {
    //         expression: "timeSeries.home.streaks.overall.current.type === 'win' && timeSeries.home.streaks.overall.current.count >= 2",
    //         description: "Home team on 2+ game win streak"
    //     },
    //     homeLossStreak: {
    //         expression: "timeSeries.home.streaks.overall.current.type === 'loss' && timeSeries.home.streaks.overall.current.count >= 2",
    //         description: "Home team on 2+ game loss streak"
    //     },
    //     awayWinStreak: {
    //         expression: "timeSeries.away.streaks.overall.current.type === 'win' && timeSeries.away.streaks.overall.current.count >= 2",
    //         description: "Away team on 2+ game win streak"
    //     },
    //     awayLossStreak: {
    //         expression: "timeSeries.away.streaks.overall.current.type === 'loss' && timeSeries.away.streaks.overall.current.count >= 2",
    //         description: "Away team on 2+ game loss streak"
    //     },
    //     homeVenueStreak: {
    //         expression: "timeSeries.home.streaks.venue.current.type === 'win' && timeSeries.home.streaks.venue.current.count >= 2",
    //         description: "Home team on 2+ home game win streak"
    //     },
    //     awayVenueStreak: {
    //         expression: "timeSeries.away.streaks.venue.current.type === 'win' && timeSeries.away.streaks.venue.current.count >= 2",
    //         description: "Away team on 2+ away game win streak"
    //     },
    //     longStreak: {
    //         expression: "(timeSeries.home.streaks.overall.current.count >= 3 || timeSeries.away.streaks.overall.current.count >= 3)",
    //         description: "Either team on 3+ game streak"
    //     },
    //     momentumReversal: {
    //         expression: "timeSeries.home.streaks.overall.current.type === 'loss' && timeSeries.home.streaks.overall.longest.win >= 2 && timeSeries.away.streaks.overall.current.type === 'win' && timeSeries.away.streaks.overall.longest.loss >= 2",
    //         description: "Home team losing after winning streak, away team winning after losing streak"
    //     },

    //     handicapStreak: {
    //         expression: "timeSeries.home.streaks.handicap.current.type === 'win' && timeSeries.home.streaks.handicap.current.count >= 2",
    //         description: "Home team on 2+ game win streak"
    //     },
    //     handicapLossStreak: {
    //         expression: "timeSeries.home.streaks.handicap.current.type === 'loss' && timeSeries.home.streaks.handicap.current.count >= 2",
    //         description: "Home team on 2+ game loss streak"
    //     },
    //     ahSuccessRate: {
    //         expression: "(timeSeries.home.patterns.asianHandicapSuccess || 0) - (timeSeries.away.patterns.asianHandicapSuccess || 0)",
    //         description: "Home vs away AH success rate difference"
    //     }
    // },

    // === NEW HIGH-VALUE FACTORS FROM AH-ANALYSIS ===
    // proven: {
    //     earlyQuarterFade: {
    //         expression: "fbref.week <= 8 && match.asianHandicapOdds.homeHandicap === '0/-0.5'",
    //         description: "Early season quarter favorites to fade (40%+ ROI validated)"
    //     },
    //     ultraEarlyQuarterFade: {
    //         expression: "fbref.week <= 6 && match.asianHandicapOdds.homeHandicap === '0/-0.5'",
    //         description: "Ultra early quarter favorites to fade (60%+ ROI validated)"
    //     },
    //     trappedZeroHalf: {
    //         expression: "match.asianHandicapOdds.homeHandicap === '0/-0.5' && match.asianHandicapOdds.homeOdds <= 1.72",
    //         description: "Trapped 0/-0.5 home favorites (26% ROI validated)"
    //     },
    //     earlyStrongerHomeFavorites: {
    //         expression: "fbref.week <= 8 && match.asianHandicapOdds.homeHandicap === '-0.5/-1'",
    //         description: "Early season stronger home favorites (21% ROI validated)"
    //     },
    //     fallingGiant: {
    //         expression: "(timeSeries.home.leaguePosition || 20) <= 8 && (timeSeries.home.streaks.overall.longest.loss || 0) >= 3 && preMatch.enhanced.homeImpliedProb > 50",
    //         description: "Good home team on losing streak but market still backs them (34% ROI validated)"
    //     },
    //     sweetSpotUnderdog: {
    //         expression: "parseFloat(match.asianHandicapOdds.homeHandicap.split('/')[0]) >= 0.5 && parseFloat(match.asianHandicapOdds.homeHandicap.split('/')[0]) <= 1.0 && (timeSeries.home.leaguePosition || 20) <= 12",
    //         description: "Decent home teams getting moderate handicap start (6.5% ROI validated)"
    //     }
    // }
}; 